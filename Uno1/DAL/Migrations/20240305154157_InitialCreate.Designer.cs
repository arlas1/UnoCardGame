// <auto-generated />
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240305154157_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.DbEntities.GameState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CardColorChoice")
                        .HasColumnType("int");

                    b.Property<int>("ConsoleSaved")
                        .HasColumnType("int");

                    b.Property<int>("CurrentPlayerIndex")
                        .HasColumnType("int");

                    b.Property<int>("GameDirection")
                        .HasColumnType("int");

                    b.Property<int>("IsColorChosen")
                        .HasColumnType("int");

                    b.Property<int>("IsGameEnded")
                        .HasColumnType("int");

                    b.Property<int>("IsGameStarted")
                        .HasColumnType("int");

                    b.Property<int>("MaxCardAmount")
                        .HasColumnType("int");

                    b.Property<int>("PlayersMaxAmount")
                        .HasColumnType("int");

                    b.Property<int>("SelectedCardIndex")
                        .HasColumnType("int");

                    b.Property<int>("WinnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GameStates");
                });

            modelBuilder.Entity("DAL.DbEntities.Hand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CardColor")
                        .HasColumnType("int");

                    b.Property<int>("CardValue")
                        .HasColumnType("int");

                    b.Property<int>("GameStateId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Hands");
                });

            modelBuilder.Entity("DAL.DbEntities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GameStateId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("DAL.DbEntities.StockPile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CardColor")
                        .HasColumnType("int");

                    b.Property<int>("CardValue")
                        .HasColumnType("int");

                    b.Property<int>("GameStateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StockPiles");
                });

            modelBuilder.Entity("DAL.DbEntities.UnoDeck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CardColor")
                        .HasColumnType("int");

                    b.Property<int>("CardValue")
                        .HasColumnType("int");

                    b.Property<int>("GameStateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UnoDecks");
                });
#pragma warning restore 612, 618
        }
    }
}
